"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const argon2_1=__importDefault(require("argon2")),crypto_1=__importDefault(require("crypto")),debug_util_1=__importDefault(require("../../utils/debug.util")),users_service_1=__importDefault(require("../services/users.service")),log=(0,debug_util_1.default)("app:users-controller");class UsersController{async post(e,t){const s=crypto_1.default.createSecretKey(crypto_1.default.randomBytes(16)).export().toString("hex"),a=`${btoa(e.body.password)}${s}`;e.body.password=await argon2_1.default.hash(a),e.body.password=`${e.body.password}.$.${s}`;const r=await users_service_1.default.create(e.body);t.status(201).send({id:r})}async getList(e,t){const{limit:s=100,page:a=0}=e.query,r=await users_service_1.default.list(s,a);t.status(200).send(r)}async getById(e,t){const s=await users_service_1.default.readById(e.body.id);t.status(200).send(s)}async getByEmail(e,t){const s=await users_service_1.default.readByEmail(e.params.email);t.status(200).send(s)}async putById(e,t){const s=crypto_1.default.createSecretKey(crypto_1.default.randomBytes(16)).export().toString("hex"),a=`${btoa(e.body.password)}${s}`;e.body.password=await argon2_1.default.hash(a),e.body.password=`${e.body.password}.$.${s}`,log(await users_service_1.default.partialUpdateById(e.body.id,e.body)),t.status(204).send({id:e.body.id})}async patchById(e,t){if(e.body.password){const t=crypto_1.default.createSecretKey(crypto_1.default.randomBytes(16)).export().toString("hex"),s=`${btoa(e.body.password)}${t}`;e.body.password=await argon2_1.default.hash(s),e.body.password=`${e.body.password}.$.${t}`}log(await users_service_1.default.partialUpdateById(e.body.id,e.body)),t.status(204).send()}async deleteById(e,t){log(await users_service_1.default.deleteById(e.body.id)),t.status(204).send()}}exports.default=new UsersController;