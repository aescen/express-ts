"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),require("../../utils/env");const mongoose_1=__importDefault(require("mongoose")),debug_util_1=__importDefault(require("../../utils/debug.util")),log=(0,debug_util_1.default)("app:mongoose-service");class MongooseService{constructor(){this.mongooseOptions={serverSelectionTimeoutMS:5e3},this.retrySeconds=5,this.retryCount=0,this.connectWithRetry=this.connectWithRetry.bind(this),this.connectWithRetry()}getMongoose(){return mongoose_1.default}connectWithRetry(){log("Attempting MongoDB connection (auto retry)"),mongoose_1.default.connect(process.env.DB_URL,this.mongooseOptions).then((()=>{log("MongoDB is connected")})).catch((e=>{log(`MongoDB connection unsuccessful (will retry ${this.retryCount+=1} after ${this.retrySeconds} seconds): %O`,e),setTimeout(this.connectWithRetry,1e3*this.retrySeconds)}))}}exports.default=new MongooseService;